<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/xx/**" location="/xx/" />
	
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 10메가 : 1024*1024*10 -->	
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<beans:property value="10485760" name="maxUploadSize"></beans:property>
	</beans:bean>
	
	<!-- 이제 파일을 저장할 폴더 지정 폴더를 만들어야됨.... 이렇게 하고. -->
	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg value="C:\\zzz\\upload">		
		</beans:constructor-arg>	
	</beans:bean>
	
	
	<beans:bean id="javaMailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"></beans:property>
		<beans:property name="port" value="587"></beans:property>
		<beans:property name="defaultEncoding" value="utf-8"></beans:property>
		<beans:property name="username" value="babobungmin@gmail.com"></beans:property>
		<beans:property name="password" value="qudals2323*"></beans:property>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
			
			</beans:props>
		
	</beans:property>
	</beans:bean>
	
	
	<beans:bean class="kr.co.interceptor.SampleInterceptor" id="sampleInterceptor"></beans:bean>
	
	<beans:bean class="kr.co.interceptor.FileDeleteInterceptor" id="fileDeleteInterceptor"></beans:bean>
	
	<beans:bean class="kr.co.interceptor.LoginInterceptor" id="loginInterceptor"> </beans:bean>
	
	
	<beans:bean class="kr.co.interceptor.AuthInterceptor" id="authInterceptor"> </beans:bean>
	
	
	<interceptors>
		<interceptor>
			<mapping path="/testA"/>
			<beans:ref bean="sampleInterceptor"/>		
		</interceptor>
		<interceptor>
			<mapping path="/board/update"/>
			<beans:ref bean="fileDeleteInterceptor"/>
		
		</interceptor>
		<interceptor>
			<mapping path="/user/loginPost"/>
			<beans:ref bean="loginInterceptor"/>		
		</interceptor>
		
	
		<interceptor>
			<mapping path="/board/create"/>			
			<mapping path="/board/update"/>
			<mapping path="/board/delete"/>
			<mapping path="/admin"/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>	
					
	</interceptors>	
	<!-- testA 라는 URI가 실행되기전에 sampleInterceptor 가 데이터를 잡아내서 모해서 넘겨주던가.. 끝나면 다시 잡아내서 -->
	
		
	
	
	<!-- <context:component-scan base-package="kr.co.*" /> -->
	<!-- <context:component-scan base-package="kr.co.green" />
	<context:component-scan base-package="kr.co.persistence" />
	<context:component-scan base-package="kr.co.service" /> -->
	
	 <context:component-scan base-package="kr.co.green" />
	<context:component-scan base-package="kr.co.controller"/>
	
	
	<!-- 도메인은 필요없음 -->
	
	
	
	
</beans:beans>
